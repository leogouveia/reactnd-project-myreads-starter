{"id":"../node_modules/core-js/modules/$.string-trim.js","dependencies":[{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/package.json","includedInParent":true,"mtime":1540658192602},{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/.babelrc","includedInParent":true,"mtime":1540657850994},{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/package.json","includedInParent":true,"mtime":1540476048392},{"name":"./$.export","loc":{"line":1,"column":22},"parent":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.string-trim.js","resolved":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.export.js"},{"name":"./$.defined","loc":{"line":2,"column":22},"parent":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.string-trim.js","resolved":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.defined.js"},{"name":"./$.fails","loc":{"line":3,"column":22},"parent":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.string-trim.js","resolved":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.fails.js"}],"generated":{"js":"var $export = require('./$.export')\n  , defined = require('./$.defined')\n  , fails   = require('./$.fails')\n  , spaces  = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n      '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF'\n  , space   = '[' + spaces + ']'\n  , non     = '\\u200b\\u0085'\n  , ltrim   = RegExp('^' + space + space + '*')\n  , rtrim   = RegExp(space + space + '*$');\n\nvar exporter = function(KEY, exec){\n  var exp  = {};\n  exp[KEY] = exec(trim);\n  $export($export.P + $export.F * fails(function(){\n    return !!spaces[KEY]() || non[KEY]() != non;\n  }), 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function(string, TYPE){\n  string = String(defined(string));\n  if(TYPE & 1)string = string.replace(ltrim, '');\n  if(TYPE & 2)string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;","map":{"mappings":[{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/core-js/modules/$.string-trim.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../node_modules/core-js/modules/$.string-trim.js":"var $export = require('./$.export')\n  , defined = require('./$.defined')\n  , fails   = require('./$.fails')\n  , spaces  = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n      '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF'\n  , space   = '[' + spaces + ']'\n  , non     = '\\u200b\\u0085'\n  , ltrim   = RegExp('^' + space + space + '*')\n  , rtrim   = RegExp(space + space + '*$');\n\nvar exporter = function(KEY, exec){\n  var exp  = {};\n  exp[KEY] = exec(trim);\n  $export($export.P + $export.F * fails(function(){\n    return !!spaces[KEY]() || non[KEY]() != non;\n  }), 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function(string, TYPE){\n  string = String(defined(string));\n  if(TYPE & 1)string = string.replace(ltrim, '');\n  if(TYPE & 2)string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;"},"lineCount":29}},"hash":"0401dee127f235e7644b29cb7202c8d7","cacheData":{"env":{}}}