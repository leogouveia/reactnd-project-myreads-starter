{"id":"../node_modules/core-js/modules/$.iter-call.js","dependencies":[{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/package.json","includedInParent":true,"mtime":1540658192602},{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/.babelrc","includedInParent":true,"mtime":1540657850994},{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/package.json","includedInParent":true,"mtime":1540476048392},{"name":"./$.an-object","loc":{"line":2,"column":23},"parent":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.iter-call.js","resolved":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.an-object.js"}],"generated":{"js":"// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","map":{"mappings":[{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/modules/$.iter-call.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}}],"sources":{"../node_modules/core-js/modules/$.iter-call.js":"// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};"},"lineCount":12}},"hash":"d8ea38d41831aacc5f7d56c4c14058c8","cacheData":{"env":{}}}