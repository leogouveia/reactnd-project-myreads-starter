{"id":"../node_modules/core-js/modules/$.ctx.js","dependencies":[{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/package.json","includedInParent":true,"mtime":1540658192602},{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/.babelrc","includedInParent":true,"mtime":1540657850994},{"name":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/package.json","includedInParent":true,"mtime":1540476048392},{"name":"./$.a-function","loc":{"line":2,"column":24},"parent":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.ctx.js","resolved":"/mnt/d/LeoGouveia/Desenvolvimento/Aulas/Udacity/React/reactnd-project-myreads-starter/node_modules/core-js/modules/$.a-function.js"}],"generated":{"js":"// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","map":{"mappings":[{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/modules/$.ctx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"../node_modules/core-js/modules/$.ctx.js":"// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};"},"lineCount":20}},"hash":"5dc9f753411bd971f3816b0b518f3070","cacheData":{"env":{}}}